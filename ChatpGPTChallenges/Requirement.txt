Beginner Challenges
Fibonacci Number

Write a function to return the nth Fibonacci number (iterative and recursive versions).

Palindrome Checker

Write a method that checks whether a string is a palindrome (ignoring casing and punctuation).

FizzBuzz

Print numbers from 1 to 100, but for multiples of 3 print "Fizz", for multiples of 5 print "Buzz", and for multiples of both print "FizzBuzz".

Factorial Calculation

Write a method to compute factorial of a number using recursion.

Reverse a String

Reverse a string without using built-in Reverse() method.

?? Intermediate Challenges
Two Sum

Given an array of integers, return indices of the two numbers such that they add up to a specific target.

Balanced Brackets

Check whether a string of brackets is properly nested. Supports (), {}, and [].

String Compression

Implement a method to perform basic string compression using the counts of repeated characters.
Example: "aabcccccaaa" ? "a2b1c5a3"

Find Duplicates in an Array

Return all duplicates in an array of integers.

Anagram Checker

Write a method that checks if two strings are anagrams of each other.

?? Advanced Challenges
LRU Cache Implementation

Implement an LRU (Least Recently Used) cache using a dictionary and a linked list.

Binary Search Tree (BST)

Create a class for a binary search tree and implement Insert, Search, and InOrderTraversal methods.

Maze Solver

Given a 2D array (maze), write a method to determine if there’s a path from start to finish.

Custom LINQ Method

Implement your own version of a LINQ method like Where() or Select() using extension methods.

Dependency Resolver (Topological Sort)

Given a list of dependencies between software packages, determine the correct installation order.

